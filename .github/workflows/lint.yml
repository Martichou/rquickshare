name: Code quality - linting

on:
  push:
    branches: [ "master" ]
  pull_request:

# cancel ongoing jobs:
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  ensure_vue_lib_same:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          diff -qr app/legacy/src/vue_lib app/main/src/vue_lib

  style_rust:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - directory: ./core_lib
          - directory: ./app/legacy/src-tauri
          - directory: ./app/main/src-tauri
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: |
          cd ${{ matrix.directory }}
          cargo fmt --all --check

  style_tauri:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - directory: ./app/legacy
          - directory: ./app/main
    steps:
      - uses: actions/checkout@v4
      - uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: pnpm/action-setup@v4
        with:
          version: 8
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: |
          cd ${{ matrix.directory }}
          pnpm install
          pnpm lint

  clippy_check:
    strategy:
      matrix:
        include:
          - directory: core_lib
            clippy_args: "--all-features --all"
            os: ubuntu-latest
          - directory: app/legacy/src-tauri
            clippy_args: "--no-default-features"
            os: ubuntu-20.04
          - directory: app/main/src-tauri
            clippy_args: "--no-default-features"
            os: ubuntu-24.04
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-directories: "${{ github.workspace }}/${{ matrix.directory }}/target"
      - uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Linux dependencies for U
        run: |
          sudo apt-get update
          sudo apt-get install -y libdbus-1-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Install Linux dependencies for U20.04
        if: matrix.os == 'ubuntu-20.04'
        run: |
          sudo apt-get install -y libjavascriptcoregtk-4.0-dev libwebkit2gtk-4.0-dev

      - name: Install Linux dependencies for U24.04
        if: matrix.os == 'ubuntu-24.04'
        run: |
          sudo apt-get install -y libsoup-3.0-dev libjavascriptcoregtk-4.1-dev libwebkit2gtk-4.1-dev

      - name: Clippy Check
        run: |
          cd ${{ matrix.directory }}
          cargo clippy ${{ matrix.clippy_args }} -- -D "warnings"